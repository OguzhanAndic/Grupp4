#Importera bibliotek
#Grupp 4 - Furkan, Simon, Sahand, Shilan, Sayna,  Wadad

import requests  #Den hämtar in info genom API
import json  #Den hanterar json formatet

#Tom lista för elever, för att lagra elevobejekt
elever: list = []

#Skapat en class och definierat en metod med attribut
class Elev:
    def __init__(
        self, name: str, lastname: str, email: str, phone: str, address: dict
    ) -> None:
        self.name = name
        self.lastname = lastname
        self.email = email
        self.phone = phone
        self.address = address

    #En metod för att struktera adressinformationen
    def adress_info(self) -> None:
        adress: dict = self.address
        print(
            f"Adress: {adress['address']}, {adress['city']}, {adress['state']} {adress['postalCode']}, {adress['country']}"
        )


def elever_info() -> bool:
    try:
        #Get-förfrågan för att hämta data från API't.
        extern_data = requests.get("https://dummyjson.com/users", timeout=10)

        #Kontrollerar om statuskoden är fel (t.ex. 404)
        extern_data.raise_for_status()

        #Om svaret från API:n är tom hanterar vi det som ett fel
        if not extern_data.text:
            return False

        #Omvandla API-svaret till Python-objekt
        json_data: dict = json.loads(extern_data.text)

        #Loopa genom alla användare (user) i "users"-listan från JSON-data och
        for user in json_data["users"]:
            #Skapa ett elevobjekt från varje användares data
            elev = Elev(
                name=user["firstName"],
                lastname=user["lastName"],
                email=user["email"],
                phone=user["phone"],
                address=user["address"],
            )
            elever.append(elev)

        return True  #Returnerar True då information gick att hämta
    except (requests.exceptions.RequestException, json.JSONDecodeError) as e:
        return False  #Returnerar False eftersom ett fel uppstod



#Inloggningsfunktion
def inloggning(användarnamn: str = "Devops24", lösenord: str = "Grupp4") -> None:
    print(
        r"""
Välkommen till Grupp4:s sökverktyg och elevdatabas! 
Här kan du enkelt ta ut en klasslista eller söka en specifik elev för elevens kontaktuppgifter.

         _.-----._
       .'.-'''''-.'._
      //`         ` ;; 
     ;; '           ;;'.__.===============,
     ||  LOADING...  ||  __                 )
     ;;             ;;.'  '==============='
      \            ///
       ':.._____..:'~
         `'-----'`



Var god och logga in med de uppgifter du har fått från Grupp4."""
    )
    while (
        True
    ):  #Om användaren skriver fel inloggnings uppgifter kommer while true loopa tillbaka till början.
        angivet_namn: str = input("Användarnamn: ")
        angivet_lösenord: str = input("Lösenord: ")
        if angivet_namn == användarnamn and angivet_lösenord == lösenord:
            print("Du loggas in...")
            break
        else:
            print("Felaktig användarnamn eller lösenord! Försök igen")


#Sökfunktion:
#Skapat en funktion som frågar användaren efter input för att sedan plocka fram information om sådan finns i elever listan
def söka_elev() -> None:
    elev_sökning: str = input("Ange elevens förnamn: ").lower()
    for sökning in elever:
        if (
            sökning.name.lower() == elev_sökning
        ):  #Om namnet på listan stämmer överens med namnet på input
            print("Sökningsresultat: ")
            print(f"Namn: {sökning.name} {sökning.lastname}")
            sökning.adress_info()  #Kallar på funktionen vi har skapat för att strukturera adressen
            print(f"Email: {sökning.email}, Telefon: {sökning.phone}\n")
            break
    else:
        print("Ingen elev med det angivna namnet kunde hittas.")


#Funktion som använder sig av while loop när användaren söker efter elev
def loopa_sök_elev() -> None:
    söka_elev()
    while True:
        loopa_igen: str = input(
            "Vill du söka upp en annan elev? Svara ja eller nej : "
        ).lower()
        if loopa_igen == "ja":
            söka_elev()
            continue
        elif loopa_igen == "nej":
            break
        else:
            print("Felaktigt svar, frågar igen")
            continue


#Funktion för huvudmenyn som använder while loop för 2 alternativ som refererar till tidigare funktioner
def huvudmeny() -> None:

    while True:
        print(
            r"""
╦ ╦┬ ┬┬  ┬┬ ┬┌┬┐┌┬┐┌─┐┌┐┌┬ ┬
╠═╣│ │└┐┌┘│ │ │││││├┤ │││└┬┘
╩ ╩└─┘ └┘ └─┘─┴┘┴ ┴└─┘┘└┘ ┴

1. Klasslista
2. Sök elev
3. Logga ut
               """
        )

        val: str = input("Ange menyvalet (1, 2 eller 3): ")
        if val == "1":
            print("\nKlasslista: ")
            for elev in elever:
                print(f"Namn: {elev.name} {elev.lastname}")
                elev.adress_info()
                print(f"Email: {elev.email}, Telefon: {elev.phone}\n")
            print(
                """
****** Slut på klasslistan. Återgår till huvudmenyn. ******\n"""
            )

        elif val == "2":
            while True:
                loopa_sök_elev()  #Den ropar på tidigare funktionen
                break
        elif val == "3":
            print("Du loggas ut... ")
            break

        else:
            print("Ogiltigt val. Vänligen ange 1, 2 eller 3.")

    print("\nProgrammet avslutas. Ha en bra dag!")


if elever_info():  #Kontrollera om elever_info() returnerade True (lyckad körning)
    inloggning()  #Kör inloggning om elever_info() lyckades
    huvudmeny()  #Kör huvudmeny om elever_info() lyckades
else:
    print(
        "Datahanteringen misslyckades. Inloggning och huvudmeny kommer inte att köras."
